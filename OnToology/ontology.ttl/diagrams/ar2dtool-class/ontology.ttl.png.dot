digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "sol:AttributeSpecification" "sol:MapKeyType" "sol:BytesValue" "sol:ArrayValue" "sol:ValueSpecification" "sol:ConstantType" "sol:ModifierOverrideSpecification" "sol:BoolValue" "sol:ModifierBehaviour" "sol:FunctionSpecification" "sol:ModifierOverrideTipe" "sol:EventSpecification" "sol:EnumType" "sol:StructType" "sol:DualMemoryType" "sol:ArrayValueSpecification" "sol:Type" "sol:ModifierSpecification" "sol:ArrayDimension" "sol:SingleMemoryType" "sol:Interface" "sol:GenericValue" "sol:DataLocation" "sol:ParameterTypeWithDataLocation" "sol:ParameterVariableSpecification" "sol:FallbackSpecification" "sol:FunctionBehaviour" "sol:Implementation" "sol:MapType" "sol:FixedValue" "sol:ArrayType" "sol:UsingForDirective" "sol:LibraryImplementation" "sol:ContractImplementation" "sol:ContractAttributeSpecification" "sol:Abstract" "sol:ConstructorSpecification" "sol:ArrayAttributeSpecification" "sol:FRBehaviour" "sol:CodelessFunctionSpecification" "sol:NonConstantAttributeSpecification" "sol:ReceiveSpecification" "sol:StringValue" "sol:ParameterType" "sol:IntValue" "sol:Visibility" ; /*classes style*/
	"sol:" -> "https://chowlk.linkeddata.es/" [ label = "mod:createdWith" ];
	"sol:ArrayType" -> "sol:Type" [ label = "sol:hasType" ];
	"sol:NonConstantAttributeSpecification" -> "sol:Visibility" [ label = "sol:hasAttributeVisibility" ];
	"sol:Implementation" -> "xsd:string" [ label = "sol:version" ];
	"sol:ParameterVariableSpecification" -> "sol:ParameterType" [ label = "sol:hasParameterType" ];
	"sol:ModifierSpecification" -> "sol:ModifierBehaviour" [ label = "sol:hasModifierBehaviour" ];
	"sol:FunctionSpecification" -> "sol:FunctionBehaviour" [ label = "sol:hasFunctionBehaviour" ];
	"sol:FallbackSpecification" -> "xsd:string" [ label = "sol:fallbackCode" ];
	"sol:ArrayDimension" -> "xsd:short" [ label = "sol:index" ];
	"sol:DualMemoryType" -> "xsd:short" [ label = "sol:memoryM" ];
	"sol:ContractImplementation" -> "sol:UsingForDirective" [ label = "sol:hasContractUsingForDirective" ];
	"sol:ContractAttributeSpecification" -> "sol:ConstantType" [ label = "sol:hasConstantType" ];
	"sol:DualMemoryType" -> "xsd:short" [ label = "sol:memoryN" ];
	"sol:BytesValue" -> "xsd:string" [ label = "sol:simpleBytes" ];
	"sol:ArrayValueSpecification" -> "sol:ArrayValue" [ label = "sol:hasArrayValue" ];
	"sol:NonConstantAttributeSpecification" -> "xsd:boolean" [ label = "sol:isInmutable" ];
	"sol:ReceiveSpecification" -> "sol:FRBehaviour" [ label = "sol:hasFallbackBehaviour" ];
	"sol:ParameterVariableSpecification" -> "xsd:short" [ label = "sol:hasParameterPosition" ];
	"sol:FixedValue" -> "xsd:string" [ label = "sol:simpleFixed" ];
	"sol:ConstructorSpecification" -> "xsd:string" [ label = "sol:constructorCode" ];
	"sol:GenericValue" -> "xsd:Literal" [ label = "sol:simpleGeneric" ];
	"sol:ContractImplementation" -> "sol:ConstructorSpecification" [ label = "sol:hasContractConstructor" ];
	"sol:FunctionSpecification" -> "xsd:string" [ label = "sol:functionName" ];
	"sol:Implementation" -> "sol:EventSpecification" [ label = "sol:hasImplementationEvent" ];
	"sol:BoolValue" -> "xsd:string" [ label = "sol:simpleBool" ];
	"sol:Implementation" -> "sol:ModifierSpecification" [ label = "sol:hasImplementationModifier" ];
	"sol:Implementation" -> "sol:FunctionSpecification" [ label = "sol:hasImplementationFunction" ];
	"sol:ArrayType" -> "sol:ArrayDimension" [ label = "sol:hasArrayDimension" ];
	"sol:FunctionSpecification" -> "xsd:string" [ label = "sol:functionCode" ];
	"sol:ContractImplementation" -> "xsd:string" [ label = "sol:inheritance" ];
	"sol:StringValue" -> "xsd:string" [ label = "sol:simpleString" ];
	"sol:UsingForDirective" -> "sol:LibraryImplementation" [ label = "sol:isUsingLibrary" ];
	"sol:ContractImplementation" -> "sol:FallbackSpecification" [ label = "sol:hasContractFallback" ];
	"sol:ValueSpecification" -> "xsd:boolean" [ label = "sol:isConstant" ];
	"sol:ArrayDimension" -> "xsd:short" [ label = "sol:lenght" ];
	"sol:FunctionBehaviour" -> "sol:ModifierSpecification" [ label = "sol:isDefinedAs" ];
	"sol:Interface" -> "sol:CodelessFunctionSpecification" [ label = "sol:hasInterfaceFunction" ];
	"sol:Implementation" -> "sol:StructType" [ label = "sol:hasImplementationStructType" ];
	"sol:ReceiveSpecification" -> "xsd:string" [ label = "sol:receiveCode" ];
	"sol:Implementation" -> "xsd:string" [ label = "sol:import" ];
	"sol:ParameterTypeWithDataLocation" -> "sol:DataLocation" [ label = "sol:hasParameterTypeWithDataLocation" ];
	"sol:FallbackSpecification" -> "sol:FRBehaviour" [ label = "sol:hasReceiveVisibility" ];
	"sol:FunctionSpecification" -> "sol:ParameterVariableSpecification" [ label = "sol:hasFunctionArguments" ];
	"sol:CodelessFunctionSpecification" -> "xsd:string" [ label = "sol:codelessFunctionCode" ];
	"sol:ContractImplementation" -> "sol:AttributeSpecification" [ label = "sol:hasContractAttribute" ];
	"sol:ModifierSpecification" -> "xsd:string" [ label = "sol:modifierCode" ];
	"sol:ModifierSpecification" -> "sol:ParameterVariableSpecification" [ label = "sol:hasModifierArguments" ];
	"sol:EventSpecification" -> "sol:ParameterVariableSpecification" [ label = "sol:hasEventArguments" ];
	"sol:Implementation" -> "sol:Interface" [ label = "sol:hasInterface" ];
	"sol:FallbackSpecification" -> "sol:FRBehaviour" [ label = "sol:hasReceiveBehaviour" ];
	"sol:MapType" -> "owl:Thing" [ label = "sol:hasValueMap" ];
	"sol:ContractImplementation" -> "sol:Abstract" [ label = "sol:isAbstract" ];
	"sol:ArrayAttributeSpecification" -> "sol:ArrayType" [ label = "sol:hasNonConstantType" ];
	"sol:UsingForDirective" -> "xsd:string" [ label = "sol:usingForName" ];
	"sol:ContractImplementation" -> "sol:ReceiveSpecification" [ label = "sol:hasContractReceive" ];
	"sol:MapType" -> "sol:MapKeyType" [ label = "sol:hasKeyMap" ];
	"sol:AttributeSpecification" -> "xsd:string" [ label = "sol:attributeName" ];
	"sol:NonConstantAttributeSpecification" -> "sol:ValueSpecification" [ label = "sol:hasAttributeValue" ];
	"sol:Implementation" -> "xsd:string" [ label = "sol:contractName" ];
	"sol:FunctionSpecification" -> "sol:ParameterVariableSpecification" [ label = "sol:hasFunctionReturn" ];
	"sol:LibraryImplementation" -> "sol:ContractAttributeSpecification" [ label = "sol:hasConstantAttribute" ];
	"sol:EventSpecification" -> "xsd:boolean" [ label = "sol:isAnonymous" ];
	"sol:ReceiveSpecification" -> "sol:FRBehaviour" [ label = "sol:hasFallbackVisibility" ];
	"sol:ParameterVariableSpecification" -> "xsd:string" [ label = "sol:hasParameterName" ];
	"sol:IntValue" -> "xsd:string" [ label = "sol:simpleInt" ];
	"sol:ModifierOverrideSpecification" -> "sol:ModifierOverrideTipe" [ label = "sol:hasModifierOverrideType" ];
	"sol:ConstructorSpecification" -> "sol:ParameterVariableSpecification" [ label = "sol:hasConstructorArguments" ];
	"sol:ArrayValue" -> "sol:ArrayValueSpecification" [ label = "sol:hasIndexArrayValue" ];
	"sol:ModifierSpecification" -> "xsd:string" [ label = "sol:modifierName" ];
	"sol:ArrayValue" -> "xsd:short" [ label = "sol:hasIndex" ];
	"sol:EventSpecification" -> "xsd:string" [ label = "sol:eventName" ];
	"sol:StructType" -> "sol:NonConstantAttributeSpecification" [ label = "sol:hasNonConstantStructAttribute" ];
	"sol:EnumType" -> "xsd:string" [ label = "sol:option" ];
	"sol:ModifierSpecification" -> "sol:ModifierOverrideSpecification" [ label = "sol:hasOverrideReturn" ];
	"sol:SingleMemoryType" -> "xsd:short" [ label = "sol:memory" ];
	"sol:Abstract" -> "sol:CodelessFunctionSpecification" [ label = "sol:hasContractAbstractFunction" ];

}
